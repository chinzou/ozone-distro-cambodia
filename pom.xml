<project>
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ozonehis</groupId>
  <artifactId>ozone-distro-cambodia</artifactId>
  <name>Ozone Distribution for Cambodia</name>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <organization>
    <name>Ozone HIS</name>
    <url>http://www.ozone-his.com</url>
  </organization>
  <developers>
    <developer>
      <name>Mekom Solutions</name>
      <url>http://www.mekomsolutions.com</url>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <buildDirectory>${project.build.directory}</buildDirectory>
    <assemblyClassifier>assembly-id</assemblyClassifier>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.ozonehis</groupId>
      <artifactId>ozonepro-distro</artifactId>
      <type>zip</type>
      <version>1.0.0-SNAPSHOT</version>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <!-- Introducing confidentiality dependencies for production environments -->
      <id>prod</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <assemblyClassifier>prod</assemblyClassifier>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.ozonehis</groupId>
          <artifactId>ozone-config-cambodia0</artifactId>
          <type>zip</type>
          <version>1.0.0-SNAPSHOT</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.8</version>
            <executions>
              <execution>
                <id>unpack-ozone-config-cambodia0</id>
                <phase>package</phase>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                  <excludeTransitive>true</excludeTransitive>
                  <useBaseVersion>true</useBaseVersion>
                  <outputDirectory>${buildDirectory}/${project.artifactId}-${project.version}</outputDirectory>
                  <includeArtifactIds>ozone-config-cambodia0</includeArtifactIds>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>package-distro-prod-artifact</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>true</appendAssemblyId>
                  <descriptors>
                    <descriptor>assembly.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>validator</id>
      <build>
        <plugins>
          <!-- hooking the OpenMRS config validation to the integration-test phase -->
          <plugin>
            <groupId>org.openmrs.maven.plugins</groupId>
            <artifactId>openmrs-packager-maven-plugin</artifactId>
            <version>1.7.0</version>
            <executions>
              <execution>
                <id>validate-configurations</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>validate-configurations</goal>
                </goals>
                <configuration>
                  <sourceDir>
                    ${buildDirectory}/${project.artifactId}-${project.version}/configuration</sourceDir>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <!-- Copy the Ozone Pro Distro resources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>unpack-ozone-pro-distro</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludeTransitive>true</excludeTransitive>
              <useBaseVersion>true</useBaseVersion>
              <outputDirectory>${buildDirectory}/${project.artifactId}-${project.version}</outputDirectory>
              <includeArtifactIds>ozonepro-distro</includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Exclude resource files as speficied in dependency-excludes.txt -->
      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.1.0</version>
        <groupId>org.codehaus.mojo</groupId>
        <executions>
          <execution>
            <id>exclude-files</id>
            <phase>package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${basedir}/resources/exclude-files.sh</executable>
              <commandlineArgs>${buildDirectory}/${project.artifactId}-${project.version}</commandlineArgs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <!-- Override with local configuration into the target folder -->
            <id>copy-local-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${buildDirectory}/${project.artifactId}-${project.version}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/configs</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <!-- Substitue variables present in the resources/ folder -->
            <id>substitute-variables</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${buildDirectory}/resources</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/resources</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Packaging the distro as a installable/deployable file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>package-distro-artifact</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>copy-merged-config</id>
            <phase>pre-integration-test</phase>
            <configuration>
              <target>
                <copy
                  todir="${buildDirectory}/${project.artifactId}-${project.version}/configuration">
                  <fileset dir="${buildDirectory}/${project.artifactId}-${project.version}/openmrs_config" />
                </copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <repositories>
    <repository>
      <id>mks-nexus-public</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-public/</url>
    </repository>
    <repository>
      <id>mks-nexus-private</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-private/</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <name>Mekom Solutions Nexus repo</name>
      <id>mks-nexus-private</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-private/</url>
    </repository>
    <snapshotRepository>
      <name>Mekom Solutions Nexus repo for snapshots</name>
      <id>mks-nexus-private-snapshots</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-private-snapshots</url>
    </snapshotRepository>
  </distributionManagement>
  <pluginRepositories>
    <pluginRepository>
      <id>openmrs-repo</id>
      <name>OpenMRS Nexus Repository</name>
      <url>https://mavenrepo.openmrs.org/nexus/content/repositories/public</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>openmrs-snapshots</id>
      <name>OpenMRS Public Repository</name>
      <url>https://mavenrepo.openmrs.org/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
    <pluginRepository>
      <id>mks-nexus-public</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-public/</url>
    </pluginRepository>
    <pluginRepository>
      <id>mks-nexus-snapshots</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
</project>
